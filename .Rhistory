ruta_excel <- file.choose()
#Mirar datos
datos_excel <- read_excel(ruta_excel)
ruta_excel <- file.choose()
#Mirar datos
datos_excel <- read_excel(ruta_excel)
# instalar paquete readxl
install.packages("readxl")
# cargar paquete readxl
library(readxl)
ruta_excel <- file.choose()
#Mirar datos
datos_excel <- read_excel(ruta_excel)
View(datos_excel)
View(datos_excel)
datos_excel %>%
select('Campus','nivelAcademico','Residencia')
tos_excel %>%
#
install.packages("tidyverse")
library(tidyverse)
datos_excel %>%
select('Campus','nivelAcademico','Residencia')
View(datos_excel)
datos_excel %>%
select('Campus','nivelAcademico','Residencia',Femenino = n(if(Sexo == 'F')))
datos_excel %>%
select('Campus','nivelAcademico','Residencia',Femenino = n(if(Sexo == 'F')))
datos_excel %>%
select('Campus','nivelAcademico','Residencia',Femenino = n(Sexo == 'F'))
datos_excel %>%
select('Campus','nivelAcademico','Residencia',Femenino = n(Sexo))
datos_excel %>%
select('Campus','nivelAcademico','Residencia')
install.packages("tidyverse")
library(tidyverse)
# cargando datos a entorno
data(gapminder)
################################
# cargando paquete con los datos
library(gapminder)
# cargando datos a entorno
head(gapminder)
install.packages("tidyverse")
# filtrar datos por pais sin %>%
filter(gapminder, country == 'Mexico')
install.packages("glimpse")
#importar base de datos y libreria#
setwd("C:/Users/isma/Desktop")#modificar la ruta donde tengan el archivo rawTimes.csv
#importar base de datos y libreria#
setwd("C:\Users\isma\Desktop")#modificar la ruta donde tengan el archivo rawTimes.csv
/
library("tidyverse")
setwd("C:/Users/isma/Desktop")#modificar la ruta donde tengan el archivo rawTimes.csv
library("tidyverse")
RegisterData <-
read_csv("rawTimes.csv", locale = locale(encoding =  "windows-1252")) #nativo de windows para tildes
delete <-
function(x) {
#tomar el ultimo valor con last() y ponerlo en primer indice [[, 1
if (length(x[]) > 1) {
#print(last(x[]))
x[[1]] = last(x[])
} else{
x[1]
}
}
data2021 <-
RegisterData %>% filter(
Campus == "ULV",
Facultad != "NM",
Facultad != "POSTGRADO",
HoraRegistro < as.POSIXct("2022-01-01")
) %>% arrange(by_group = Matricula)
data2022 <-
RegisterData %>% filter(
Campus == "ULV",
Facultad != "NM",
Facultad != "POSTGRADO",
HoraRegistro > as.POSIXct("2022-01-01")
) %>% arrange(by_group = Matricula)
View(data2021)
View(data2021)
View(data2022)
View(data2022)
proof2021 <- data2021 %>%
select(-...1) %>%
pivot_wider(names_from = Proceso,
values_from = HoraRegistro,
values_fn = delete)
proof2022 <- data2022 %>%
select(-...1) %>%
pivot_wider(names_from = Proceso,
values_from = HoraRegistro,
values_fn = delete)
View(proof2021)
View(proof2021)
proof2021 <-
proof2021 %>% rename(
Proceso1 = `Solicitud de Carga AcadÃ©mica`,
Proceso2 = `AsignaciÃ³n de Carga AcadÃ©mica`,
Proceso3 = `Solicitud de CÃ¡lculo de Cobro`,
Proceso4 = `AsignaciÃ³n de CÃ¡lculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `ConfirmaciÃ³n Pago Deposito`,
Proceso6bis = `ConfirmaciÃ³n de Pago en LÃ­nea`,
Proceso7 = `InscripciÃ³n Finalizada`
)
proof2022 <-
proof2022 %>% rename(
Proceso0 = `AsignaciÃ³n de Carga AcadÃ©mica AutomÃ¡tica`,
Proceso1 = `Solicitud de Carga AcadÃ©mica`,
Proceso2 = `AsignaciÃ³n de Carga AcadÃ©mica`,
Proceso3 = `Solicitud de CÃ¡lculo de Cobro`,
Proceso4 = `AsignaciÃ³n de CÃ¡lculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `ConfirmaciÃ³n Pago Deposito`,
Proceso6bis = `ConfirmaciÃ³n de Pago en LÃ­nea`,
Proceso7 = `InscripciÃ³n Finalizada`
)
View(proof2021)
View(proof2021)
proof2021<-proof2021%>%
filter(
!is.na(Proceso7),
!is.na(Proceso1),
!is.na(Proceso5)
)
proof2021 <-
proof2021 %>% rename(
Proceso1 = `Solicitud de Carga AcadÃ©mica`,
Proceso2 = `AsignaciÃ³n de Carga AcadÃ©mica`,
Proceso3 = `Solicitud de CÃ¡lculo de Cobro`,
Proceso4 = `AsignaciÃ³n de CÃ¡lculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `ConfirmaciÃ³n Pago Deposito`,
Proceso6bis = `ConfirmaciÃ³n de Pago en LÃ­nea`,
Proceso7 = `InscripciÃ³n Finalizada`
)
proof2021 <-
proof2021 %>% rename(
Proceso1 = `Solicitud de Carga Académica`,
Proceso2 = `AsignaciÃ³n de Carga AcadÃ©mica`,
Proceso3 = `Solicitud de CÃ¡lculo de Cobro`,
Proceso4 = `AsignaciÃ³n de CÃ¡lculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `ConfirmaciÃ³n Pago Deposito`,
Proceso6bis = `ConfirmaciÃ³n de Pago en LÃ­nea`,
Proceso7 = `InscripciÃ³n Finalizada`
)
proof2021 <-
proof2021 %>% rename(
Proceso1 = `Solicitud de Carga Académica`,
Proceso2 = `Asignación de Carga Académica`,
Proceso3 = `Solicitud de Cálculo de Cobro`,
Proceso4 = `Asignación de Cálculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `Confirmación Pago Deposito`,
Proceso6bis = `Confirmación de Pago en Línea`,
Proceso7 = `Inscripción Finalizada`
)
proof2022 <-
proof2022 %>% rename(
Proceso0 = `Asignación de Carga Académica Automática`,
Proceso1 = `Solicitud de Carga Académica`,
Proceso2 = `Asignación de Carga Académica`,
Proceso3 = `Solicitud de Cálculo de Cobro`,
Proceso4 = `Asignación de Cálculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `Confirmación Pago Deposito`,
Proceso6bis = `Confirmación de Pago en Línea`,
Proceso7 = `Inscripción Finalizada`
)
proof2021<-proof2021%>%
filter(
!is.na(Proceso7),
!is.na(Proceso1),
!is.na(Proceso5)
)
proof2022<-proof2022%>%
filter(
!is.na(Proceso7),
!is.na(Proceso1),
!is.na(Proceso5)
)
View(proof2021)
View(proof2021)
View(proof2021)
View(proof2021)
#* operaciones *#
proof<-proof2021%>%
mutate(TiempoCargaAcademica = difftime(Proceso2,Proceso1,units = "hours"),
TiempoCalculoCobro = difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago = difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal = difftime(Proceso7,Proceso1,units = "hours"))
proof2<-proof2022%>%
mutate(TiempoCargaAcademica = difftime(Proceso2,if_else(is.na(pri)),units = "hours"),
TiempoCalculoCobro = difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago = difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal = difftime(Proceso7,Proceso1,units = "hours"))
proof<-proof2021%>%
mutate(TiempoCargaAcademica = difftime(Proceso2,Proceso1,units = "hours"),
TiempoCalculoCobro = difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago = difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal = difftime(Proceso7,Proceso1,units = "hours"))
proof2<-proof2022%>%
mutate(TiempoCargaAcademica = difftime(Proceso2,if_else(is.na(pri)),units = "hours"),
TiempoCalculoCobro = difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago = difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal = difftime(Proceso7,Proceso1,units = "hours"))
View(proof2021)
View(proof2021)
proof<-proof2021%>%
mutate(TiempoCargaAcademica = difftime(Proceso2,Proceso1,units = "hours"),
TiempoCalculoCobro = difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago = difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal = difftime(Proceso7,Proceso1,units = "hours"))
proof <- proof2021[5:12]
proof <- proof %>%
mutate(`Asignación de Carga Académica` = lapply(`Asignación de Carga Académica`, delete))
View(proof2021)
View(proof2021)
proof2021$sumass <- proof2021$
glimpse(proof2021)
glimpse(proof2021)
proof2021$sumass <- proof2021$Proceso1-proof2021$Proceso2
View(proof2021)
View(proof2021)
proof2021$sumass <- proof2021$Proceso2-proof2021$Proceso1
install.packages("lubridate")
library("lubridate")
library(lubridate)
proof2021$sumass <- seconds_to_period(proof2021$Proceso2-proof2021$Proceso1)
proof2021$sumass <- seconds_to_period(proof2021$Proceso2-proof2021$Proceso1)
View(proof2021)
View(proof2021)
proof2021$Proceso2-proof2021$Proceso1
proof2021$restaP<- seconds_to_period(proof2021$Proceso2-proof2021$Proceso1)
restaProcesos <- restaProcesos$restaP1 %>%
seconds_to_period(proof2021$Proceso2-proof2021$Proceso1)
#Resta de procesos
proof2021$restaP<- seconds_to_period(proof2021$Proceso2-proof2021$Proceso1)
proof2021$restaP2<- seconds_to_period(proof2021$Proceso4-proof2021$Proceso3)
proof2021$restaP3<- seconds_to_period(proof2021$Proceso6-proof2021$Proceso5)
proof2021$restaTotal<- seconds_to_period(proof2021$Proceso7-proof2021$Proceso1)
select(proof2021,-c(sumass))
proof2021<-select(proof2021,-c(sumass))
library(tidyverse)
proof2021<-select(proof2021,-c(sumass))
proof2021 <-
proof2021 %>% rename(
Proceso1 = `Solicitud de Carga Académica`,
Proceso2 = `Asignación de Carga Académica`,
Proceso3 = `Solicitud de Cálculo de Cobro`,
Proceso4 = `Asignación de Cálculo de Cobro`,
Proceso5 = `Pago Deposito/Tranferencia`,
Proceso6 = `Confirmación Pago Deposito`,
Proceso6bis = `Confirmación de Pago en Línea`,
Proceso7 = `Inscripción Finalizada`
)
View(proof2021)
View(proof2021)
#Resta de procesos
proof2021$restaP<- seconds_to_period(proof2021$Proceso2-proof2021$Proceso1)
proof<-proof2021%>%
mutate(TiempoCargaAcademica <- difftime(Proceso2,Proceso1,units = "hours"),
TiempoCalculoCobro <- difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago <- difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal <- difftime(Proceso7,Proceso1,units = "hours"))
View(proof)
View(proof)
proof = type.convert(proof)
#* operaciones *#
proof<-proof2021%>%
mutate(TiempoCargaAcademica <- seconds_to_period(difftime(Proceso2,Proceso1,units = "hours")),
TiempoCalculoCobro <- difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago <- difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal <- difftime(Proceso7,Proceso1,units = "hours"))
#* operaciones *#
proof<-proof2021%>%
mutate(TiempoCargaAcademica <- hours_to_period(difftime(Proceso2,Proceso1,units = "hours")),
TiempoCalculoCobro <- difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago <- difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal <- difftime(Proceso7,Proceso1,units = "hours"))
proof<-proof2021%>%
mutate(TiempoCargaAcademica <- seconds_to_period(difftime(Proceso2,Proceso1,units = "seconds")),
TiempoCalculoCobro <- difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago <- difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal <- difftime(Proceso7,Proceso1,units = "hours"))
proof<-proof2021%>%
mutate(TiempoCargaAcademica <- seconds_to_period(difftime(Proceso2,Proceso1,units = "secs")),
TiempoCalculoCobro <- difftime(Proceso4,Proceso3,units = "hours"),
TiempoPago <- difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "hours"),
TiempoTotal <- difftime(Proceso7,Proceso1,units = "hours"))
proof<-proof2021%>%
mutate(TiempoCargaAcademica <- seconds_to_period(difftime(Proceso2,Proceso1,units = "secs")),
TiempoCalculoCobro <- seconds_to_period(difftime(Proceso4,Proceso3,units = "secs")),
TiempoPago <- seconds_to_period(difftime(if_else(is.na(Proceso6),Proceso6bis,Proceso6),Proceso5,units = "secs")),
TiempoTotal <- seconds_to_period(difftime(Proceso7,Proceso1,units = "secs")))
